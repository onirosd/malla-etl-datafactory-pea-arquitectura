{
	"name": "DF_CLEAN_CLIENTE",
	"properties": {
		"folder": {
			"name": "plata"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataRawInputCliente2",
						"type": "DatasetReference"
					},
					"name": "rawCliente"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataCleanOutputCliente",
						"type": "DatasetReference"
					},
					"name": "cleanCliente"
				}
			],
			"transformations": [
				{
					"name": "insertarbkCliente"
				},
				{
					"name": "selectCliente"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RUC as string,",
				"          Nombre as string,",
				"          Direccion as string,",
				"          Telefono as string,",
				"          fecnac as timestamp,",
				"          asesor as integer,",
				"          ccliente as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> rawCliente",
				"rawCliente derive(bk_cliente = trim(ccliente)) ~> insertarbkCliente",
				"insertarbkCliente select(mapColumn(",
				"          bk_cliente,",
				"          RUC,",
				"          Nombre,",
				"          Direccion,",
				"          Telefono,",
				"          si_promotor = asesor",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCliente",
				"selectCliente sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> cleanCliente"
			]
		}
	}
}