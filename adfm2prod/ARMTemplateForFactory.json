{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adfm2prod"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"AzureDataLakeStorage1\""
		},
		"AzureDatabricksDM2_accessToken": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accessToken\"de \"AzureDatabricksDM2\""
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureSqlDatabase\""
		},
		"GitHub1_credential": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"credential\"de \"GitHub1\""
		},
		"SingleStoreConnection_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"SingleStoreConnection\""
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stm2datalake001.dfs.core.windows.net/"
		},
		"AzureDatabricksDM2_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0501-071308-en8j4x3v"
		},
		"GitHub1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "onirosd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CLEAN_ODC_ACTIVIDADES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CLEAN ODC ACTIVIDADES",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/PROYECTO CLASE/load_odc_actividad_empleado"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "plata"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T19:59:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDM2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLEAN_ODC_DETALLE_FACTURA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CLEAN ODC DETALLE FACTURA",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA PLATA/load_data_odc_facturas_detalles"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "plata"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-05T03:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDM2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLEAN_ODC_FACTURA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CLEAN_ODC_FACTURAS",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA PLATA/load_data_odc_facturas"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "plata"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-05T03:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDM2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_EMPLEADO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TEMPLEADO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tEmpleado",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettEmpleado",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettEmpleado",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tEmpleado')]",
				"[concat(variables('factoryId'), '/datasets/DataSettEmpleado')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_HORENTRADASALIDA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de HORENTRADASALIDA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from HorEntradaSalida where Fecha = '@{pipeline().parameters.fechaEjecucion}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tHorEntradaSalida",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetHorEntradaSalida",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetHorEntradaSalida",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fechaEjecucion": {
						"type": "string"
					}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tHorEntradaSalida')]",
				"[concat(variables('factoryId'), '/datasets/DataSetHorEntradaSalida')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_PAGOCONTARJETA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de PAGOCONTARJETA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tPagoConTarjetas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettPagocontarjetas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettPagocontarjetas",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tPagoConTarjetas')]",
				"[concat(variables('factoryId'), '/datasets/DataSettPagocontarjetas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TALMACEN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TALMACEN",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tAlmacen",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettAlmacen",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettAlmacen",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tAlmacen')]",
				"[concat(variables('factoryId'), '/datasets/DataSettAlmacen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TARTICULO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TTARTICULO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tArticulo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetArticulo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetArticulo",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tArticulo')]",
				"[concat(variables('factoryId'), '/datasets/DataSetArticulo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TCLIENTE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de CLIENTE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tCliente",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetTcliente",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetTcliente",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tCliente')]",
				"[concat(variables('factoryId'), '/datasets/DataSetTcliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TFACTURA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TFACTURA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dbo.tfactura WHERE Fecha = '@{pipeline().parameters.fechaEjecucion}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tFactura",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettFactura",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettFactura",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fechaEjecucion": {
						"type": "string",
						"defaultValue": "2010-01-01"
					}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tFactura')]",
				"[concat(variables('factoryId'), '/datasets/DataSettFactura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TFACTURA_CARGA_HISTORICA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TFACTURA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from dbo.tfactura where Fecha >= '2013-01-01' and Fecha <= '2014-12-31'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tFactura",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettFactura",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettFactura",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-06T04:36:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tFactura')]",
				"[concat(variables('factoryId'), '/datasets/DataSettFactura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TLOCAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TLOCAL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.tLocal"
							},
							{
								"name": "Destination",
								"value": "capabronce/raw_tlocal/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TOP 1000 * from tLocal",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tLocal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettLocal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettLocal",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-05T03:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tLocal')]",
				"[concat(variables('factoryId'), '/datasets/DataSettLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TMONEDA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TMONEDA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tMoneda",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetTmoneda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetTmoneda",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tMoneda')]",
				"[concat(variables('factoryId'), '/datasets/DataSetTmoneda')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TTARJETA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TTARJETA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tTarjeta",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSettTarjeta",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSettTarjeta",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tTarjeta')]",
				"[concat(variables('factoryId'), '/datasets/DataSettTarjeta')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TTIPODOCUMENTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de TTIPODOCUMENTO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tTipoDocumento",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetTtipodocumento",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetTtipodocumento",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tTipoDocumento')]",
				"[concat(variables('factoryId'), '/datasets/DataSetTtipodocumento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_TVTADETALLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de VTADETALLE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT a.* \nFROM tvtaDetalle a\nINNER JOIN tFactura b on a.nFactura = b.nFactura and a.idprm = b.idprm\nwhere b.Fecha = '@{pipeline().parameters.fechaEjecucion}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tvtaDetalle",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetVentaDetalle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetVentaDetalle",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fechaEjecucion": {
						"type": "string",
						"defaultValue": "2010-01-01"
					}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tvtaDetalle')]",
				"[concat(variables('factoryId'), '/datasets/DataSetVentaDetalle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_RAW_UBIGEO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copiar datos de UBIGEO",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Eliminamos previa insercion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TUbigeo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetUbigeo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Eliminamos previa insercion",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataSetUbigeo",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronce"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-24T15:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TUbigeo')]",
				"[concat(variables('factoryId'), '/datasets/DataSetUbigeo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/malla_bronce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RAW_TMONEDA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TMONEDA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TTARJETA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TTARJETA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TLOCAL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TLOCAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TTIPODOCUMENTO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TTIPODOCUMENTO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ETL_RAW_TFACTURA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RAW_TMONEDA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_TTARJETA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_TLOCAL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_TTIPODOCUMENTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TFACTURA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"fechaEjecucion": {
									"value": "@variables('fechaProceso')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RAW_UBIGEO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL_RAW_TFACTURA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_UBIGEO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TALMACEN",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL_RAW_TFACTURA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TALMACEN",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_PAGOCONTARJETA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL_RAW_TFACTURA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_PAGOCONTARJETA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TARTICULO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RAW_TVTA_DETALLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TARTICULO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_EMPLEADO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ETL_RAW_TFACTURA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_EMPLEADO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RAW_TVTA_DETALLE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RAW_UBIGEO",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_TALMACEN",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_PAGOCONTARJETA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RAW_EMPLEADO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TVTADETALLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"fechaEjecucion": {
									"value": "@variables('fechaProceso')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RAW_HORENTRADASALIDA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RAW_TVTA_DETALLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_HORENTRADASALIDA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"fechaEjecucion": {
									"value": "@variables('fechaProceso')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RAW_TCLIENTE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RAW_TVTA_DETALLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ETL_RAW_TCLIENTE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaProceso",
							"value": {
								"value": "@pipeline().parameters.fechaEjecucionMalla",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fechaEjecucionMalla": {
						"type": "string"
					}
				},
				"variables": {
					"fechaProceso": {
						"type": "String"
					}
				},
				"folder": {
					"name": "malla"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-22T13:49:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TMONEDA')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TTARJETA')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TLOCAL')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TTIPODOCUMENTO')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TFACTURA')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_UBIGEO')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TALMACEN')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_PAGOCONTARJETA')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TARTICULO')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_EMPLEADO')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TVTADETALLE')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_HORENTRADASALIDA')]",
				"[concat(variables('factoryId'), '/pipelines/ETL_RAW_TCLIENTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/malla_oro')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_almacen",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_almacen"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_articulo",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_articulo"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_cliente",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_cliente"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_empleado",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_almacen",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_empleado"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_mediopago",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_articulo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_mediopago"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_moneda",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_cliente",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_moneda"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_puntoventa",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_empleado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_puntoventa"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_tipodocumentos",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_mediopago",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_tipodocumentos"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_ubigeo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_moneda",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_dim_ubigeo"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "fac_facturas",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dim_puntoventa",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_tipodocumentos",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_ubigeo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pda3dhurtado@dmclatam.onmicrosoft.com/CAPA ORO/load_data_fact_ventagenerales"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksDM2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "malla"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-06T04:36:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDM2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/malla_plata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaProceso",
							"value": {
								"value": "@pipeline().parameters.fechaEjecucionMalla",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DFLOW_UBIGEO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_UBIGEO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawUbigeo": {},
									"cleanUbigeo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_CLEAN_EMPLEADO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_EMPLEADO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawEmpleado": {},
									"cleanEmpleado": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_CLEAN_ALMACEN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_ALMACEN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawAlmacen": {},
									"cleanAlmacen": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_CLEAN_CLIENTE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_CLIENTE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawCliente": {},
									"cleanCliente": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_CLEAN_ARTICULO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DFLOW_TIPODOCUMENTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_ARTICULO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawArticulo": {},
									"cleanArticulo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_CLEAN_LOCAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DFLOW_TIPODOCUMENTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_LOCAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawLocal": {},
									"cleanLocal": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_MONEDA",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DFLOW_TIPODOCUMENTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_MONEDA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawMoneda": {},
									"cleanMoneda": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_TARJETA",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DFLOW_TIPODOCUMENTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_TARJETA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawTarjeta": {},
									"cleanTarjeta": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DFLOW_TIPODOCUMENTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DFLOW_UBIGEO",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DFLOW_CLEAN_EMPLEADO",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DFLOW_CLEAN_ALMACEN",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DFLOW_CLEAN_CLIENTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_TIPODOCUMENTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawTipoDocumento": {},
									"cleanTipoDocumento": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DB_ODC_FACTURAS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFLOW_CLEAN_ARTICULO",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DFLOW_CLEAN_LOCAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CLEAN_ODC_FACTURA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DB_ODC_FACTURA_DETALLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFLOW_MONEDA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CLEAN_ODC_DETALLE_FACTURA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DB_ODC_ACTIVIDADES",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DFLOW_TARJETA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CLEAN_ODC_ACTIVIDADES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fechaEjecucionMalla": {
						"type": "string"
					}
				},
				"variables": {
					"fechaProceso": {
						"type": "String"
					}
				},
				"folder": {
					"name": "malla"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-05T03:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_UBIGEO')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_EMPLEADO')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_ALMACEN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_CLIENTE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_ARTICULO')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_LOCAL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_MONEDA')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_TARJETA')]",
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_TIPODOCUMENTO')]",
				"[concat(variables('factoryId'), '/pipelines/CLEAN_ODC_FACTURA')]",
				"[concat(variables('factoryId'), '/pipelines/CLEAN_ODC_DETALLE_FACTURA')]",
				"[concat(variables('factoryId'), '/pipelines/CLEAN_ODC_ACTIVIDADES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/malla_principal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "obtenemosFechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select CONVERT(varchar, fechaEjecucion, 23) as fechaEjecucion \nfrom tMallaEjecuciones where estado = 1\norder by fechaEjecucion asc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "tMallaEjecuciones",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "guardamosFecha",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "obtenemosFechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechasProcesos",
							"value": {
								"value": "@activity('obtenemosFechas').output.value\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Bucle de ejecucion de mallas",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "guardamosFecha",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('fechasProcesos')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "malla bronce data",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "malla_bronce",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"fechaEjecucionMalla": {
												"value": "@item().fechaEjecucion",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "malla plata data",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "malla bronce data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "malla_plata",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"fechaEjecucionMalla": {
												"value": "@item().fechaEjecucion",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "malla oro data",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "malla plata data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "malla_oro",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fechasProcesos": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "orquestador"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-06T04:36:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tMallaEjecuciones')]",
				"[concat(variables('factoryId'), '/pipelines/malla_bronce')]",
				"[concat(variables('factoryId'), '/pipelines/malla_plata')]",
				"[concat(variables('factoryId'), '/pipelines/malla_oro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputAlmacen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_almacen",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputArticulo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_articulo",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputCliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_cliente",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputEmpleado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_empleado",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_local",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputMoneda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_moneda",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputTarjeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_tarjeta",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputTipoDocumento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_tipoDocumento",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleanOutputUbigeo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean_ubigeo",
						"fileSystem": "capaplata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputAlmacen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttalmacen",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "nombrepc",
						"type": "UTF8"
					},
					{
						"name": "usuariopc",
						"type": "UTF8"
					},
					{
						"name": "ippc",
						"type": "UTF8"
					},
					{
						"name": "cempresa",
						"type": "UTF8"
					},
					{
						"name": "code",
						"type": "UTF8"
					},
					{
						"name": "calmacen",
						"type": "UTF8"
					},
					{
						"name": "caja",
						"type": "UTF8"
					},
					{
						"name": "activo",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputArticulo2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttarticulo",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Codarticulo",
						"type": "UTF8"
					},
					{
						"name": "Proveedor",
						"type": "UTF8"
					},
					{
						"name": "Modelo",
						"type": "UTF8"
					},
					{
						"name": "Linea",
						"type": "UTF8"
					},
					{
						"name": "cMaterial",
						"type": "UTF8"
					},
					{
						"name": "color",
						"type": "UTF8"
					},
					{
						"name": "Talla",
						"type": "UTF8"
					},
					{
						"name": "cTaco",
						"type": "UTF8"
					},
					{
						"name": "cmC",
						"type": "UTF8"
					},
					{
						"name": "cmV",
						"type": "UTF8"
					},
					{
						"name": "Descripcion",
						"type": "UTF8"
					},
					{
						"name": "Unidad",
						"type": "UTF8"
					},
					{
						"name": "Stock",
						"type": "INT32"
					},
					{
						"name": "StockMin",
						"type": "INT32"
					},
					{
						"name": "StockMax",
						"type": "INT32"
					},
					{
						"name": "CostoPromedio",
						"type": "INT32"
					},
					{
						"name": "Costo",
						"type": "INT32"
					},
					{
						"name": "CodPais",
						"type": "INT32"
					},
					{
						"name": "CodUbigeo",
						"type": "INT32"
					},
					{
						"name": "Exento",
						"type": "INT32"
					},
					{
						"name": "Tipo",
						"type": "INT32"
					},
					{
						"name": "CodTemporada",
						"type": "INT32"
					},
					{
						"name": "Flag",
						"type": "INT32"
					},
					{
						"name": "EstadoNuevo",
						"type": "INT32"
					},
					{
						"name": "Angurriento",
						"type": "INT32"
					},
					{
						"name": "flag1",
						"type": "INT32"
					},
					{
						"name": "cAnno",
						"type": "INT32"
					},
					{
						"name": "CodInterno",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputCliente2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tcliente",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "RUC",
						"type": "UTF8"
					},
					{
						"name": "Nombre",
						"type": "UTF8"
					},
					{
						"name": "Direccion",
						"type": "UTF8"
					},
					{
						"name": "Telefono",
						"type": "UTF8"
					},
					{
						"name": "fecnac",
						"type": "INT96"
					},
					{
						"name": "asesor",
						"type": "INT32"
					},
					{
						"name": "ccliente",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputEmpleado2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_templeado",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "codemp",
						"type": "UTF8"
					},
					{
						"name": "nombre",
						"type": "UTF8"
					},
					{
						"name": "apellidomat",
						"type": "UTF8"
					},
					{
						"name": "apellidopat",
						"type": "UTF8"
					},
					{
						"name": "cvendedor",
						"type": "UTF8"
					},
					{
						"name": "dni",
						"type": "UTF8"
					},
					{
						"name": "mostrar",
						"type": "UTF8"
					},
					{
						"name": "cempresa",
						"type": "UTF8"
					},
					{
						"name": "Lactancia",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputLocal3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tlocal",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "nLocal",
						"type": "UTF8"
					},
					{
						"name": "Descripcion",
						"type": "UTF8"
					},
					{
						"name": "BackTda",
						"type": "UTF8"
					},
					{
						"name": "codubigeo",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputTarjeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttarjeta",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "cTarjeta",
						"type": "UTF8"
					},
					{
						"name": "Nombre",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputTipoDocumento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttipodocumento",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Tipo",
						"type": "UTF8"
					},
					{
						"name": "Descripcion",
						"type": "UTF8"
					},
					{
						"name": "DescLarga",
						"type": "UTF8"
					},
					{
						"name": "Modulo",
						"type": "UTF8"
					},
					{
						"name": "F",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRawInputUbigeo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ubigeo",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "IDDIST",
						"type": "UTF8"
					},
					{
						"name": "NOMBDEP",
						"type": "UTF8"
					},
					{
						"name": "NOMBPROV",
						"type": "UTF8"
					},
					{
						"name": "NOMBDIST",
						"type": "UTF8"
					},
					{
						"name": "NOMCAPITAL",
						"type": "UTF8"
					},
					{
						"name": "CODREGNAT",
						"type": "UTF8"
					},
					{
						"name": "REGIONNATURAL",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRowInputMoneda2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "plata/input datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttmoneda",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "cMoneda",
						"type": "UTF8"
					},
					{
						"name": "Descripcion",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetArticulo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttarticulo",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetHorEntradaSalida')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_horentradasalida",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetTcliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tcliente",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetTmoneda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttmoneda",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetTtipodocumento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttipodocumento",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetUbigeo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ubigeo",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetVentaDetalle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tvtaDetalle",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettAlmacen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttalmacen",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettEmpleado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_templeado",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettFactura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tFactura",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tlocal",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettPagocontarjetas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_tpagocontarjetas",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSettTarjeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/output datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_ttarjeta",
						"fileSystem": "capabronce"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TUbigeo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "UBIGEO 2022_1891 distritos.csv",
						"folderPath": "sistema-reniec",
						"fileSystem": "sources"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDDIST",
						"type": "String"
					},
					{
						"name": "NOMBDEP",
						"type": "String"
					},
					{
						"name": "NOMBPROV",
						"type": "String"
					},
					{
						"name": "NOMBDIST",
						"type": "String"
					},
					{
						"name": "NOMCAPITAL",
						"type": "String"
					},
					{
						"name": "CODREGNAT",
						"type": "String"
					},
					{
						"name": "REGIONNATURAL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bd_control_asistencias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources files"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CSV DE REGISTRO DE INGRESOS Y SALIDAS.csv",
						"folderPath": "sistema-control-horas",
						"fileSystem": "sources"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "002;05;07524141;NULL;2015-04-10 00:00:00.000;10:54:45;NULL;NULL;22:07:45;V",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tAlmacen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "nombrepc",
						"type": "varchar"
					},
					{
						"name": "usuariopc",
						"type": "varchar"
					},
					{
						"name": "ippc",
						"type": "varchar"
					},
					{
						"name": "cempresa",
						"type": "varchar"
					},
					{
						"name": "code",
						"type": "varchar"
					},
					{
						"name": "calmacen",
						"type": "varchar"
					},
					{
						"name": "caja",
						"type": "varchar"
					},
					{
						"name": "activo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tusertsrvw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tArticulo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codarticulo",
						"type": "nvarchar"
					},
					{
						"name": "Proveedor",
						"type": "varchar"
					},
					{
						"name": "Modelo",
						"type": "nvarchar"
					},
					{
						"name": "Linea",
						"type": "nvarchar"
					},
					{
						"name": "cMaterial",
						"type": "varchar"
					},
					{
						"name": "color",
						"type": "nvarchar"
					},
					{
						"name": "Talla",
						"type": "varchar"
					},
					{
						"name": "cTaco",
						"type": "varchar"
					},
					{
						"name": "cmC",
						"type": "varchar"
					},
					{
						"name": "cmV",
						"type": "varchar"
					},
					{
						"name": "Descripcion",
						"type": "nvarchar"
					},
					{
						"name": "Unidad",
						"type": "varchar"
					},
					{
						"name": "Stock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockMin",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockMax",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostoPromedio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Costo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CodPais",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CodUbigeo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Exento",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tipo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CodTemporada",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Flag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EstadoNuevo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Angurriento",
						"type": "int",
						"precision": 10
					},
					{
						"name": "flag1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cAnno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CodInterno",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tArticuloT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tCliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RUC",
						"type": "varchar"
					},
					{
						"name": "Nombre",
						"type": "varchar"
					},
					{
						"name": "Direccion",
						"type": "varchar"
					},
					{
						"name": "Telefono",
						"type": "varchar"
					},
					{
						"name": "fecnac",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "asesor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ccliente",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tCLiente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tEmpleado')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codemp",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "apellidomat",
						"type": "varchar"
					},
					{
						"name": "apellidopat",
						"type": "varchar"
					},
					{
						"name": "cvendedor",
						"type": "varchar"
					},
					{
						"name": "dni",
						"type": "varchar"
					},
					{
						"name": "mostrar",
						"type": "varchar"
					},
					{
						"name": "cempresa",
						"type": "varchar"
					},
					{
						"name": "Lactancia",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tEmpleado"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tFactura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Tipo",
						"type": "varchar"
					},
					{
						"name": "cCliente",
						"type": "varchar"
					},
					{
						"name": "nFactura",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cMoneda",
						"type": "char"
					},
					{
						"name": "Fecha",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Estado",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Paridad",
						"type": "decimal",
						"precision": 10,
						"scale": 3
					},
					{
						"name": "SubTotal",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "IGV",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Total",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Referencia",
						"type": "char"
					},
					{
						"name": "CodVendedor",
						"type": "varchar"
					},
					{
						"name": "CodOperador",
						"type": "char"
					},
					{
						"name": "Vencimiento",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Recargo",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Descuento",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Exonerado",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "cAlmacen",
						"type": "varchar"
					},
					{
						"name": "nLista",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Hora",
						"type": "char"
					},
					{
						"name": "ES",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "ED",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TS",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TD",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TipoTarjeta",
						"type": "varchar"
					},
					{
						"name": "nTarjeta",
						"type": "varchar"
					},
					{
						"name": "VS",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "VD",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Caja",
						"type": "char"
					},
					{
						"name": "CierreZ",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FechaZ",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "cColegio",
						"type": "char"
					},
					{
						"name": "RUC",
						"type": "varchar"
					},
					{
						"name": "Seriereferencia",
						"type": "varchar"
					},
					{
						"name": "Tiporeferencia",
						"type": "varchar"
					},
					{
						"name": "Numreferencia",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ENC",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "DNI",
						"type": "char"
					},
					{
						"name": "idprm",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tFactura"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tHorEntradaSalida')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CodEmpresa",
						"type": "varchar"
					},
					{
						"name": "CodLocal",
						"type": "varchar"
					},
					{
						"name": "CodEmpleado",
						"type": "varchar"
					},
					{
						"name": "Secuencial",
						"type": "varchar"
					},
					{
						"name": "Fecha",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "HorIngreso",
						"type": "varchar"
					},
					{
						"name": "HorSalidaR",
						"type": "varchar"
					},
					{
						"name": "HorIngresoR",
						"type": "varchar"
					},
					{
						"name": "HorSalida",
						"type": "varchar"
					},
					{
						"name": "FApoyo",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HorEntradaSalida"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "nLocal",
						"type": "varchar"
					},
					{
						"name": "Descripcion",
						"type": "varchar"
					},
					{
						"name": "BackTda",
						"type": "char"
					},
					{
						"name": "codubigeo",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tLocal"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tMallaEjecuciones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/source mallas"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechaEjecucion",
						"type": "varchar"
					},
					{
						"name": "estado",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tMallaEjecuciones"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tMoneda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cMoneda",
						"type": "char"
					},
					{
						"name": "Descripcion",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tMoneda"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tPagoConTarjetas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tipo",
						"type": "varchar"
					},
					{
						"name": "nfactura",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cTarjeta",
						"type": "varchar"
					},
					{
						"name": "nTarjeta",
						"type": "varchar"
					},
					{
						"name": "monto",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "idprm",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tPagoConTarjetas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tTarjeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tTarjeta"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tTipoDocumento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Tipo",
						"type": "char"
					},
					{
						"name": "Descripcion",
						"type": "char"
					},
					{
						"name": "DescLarga",
						"type": "varchar"
					},
					{
						"name": "Modulo",
						"type": "char"
					},
					{
						"name": "F",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tTipoDocumento"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tvtaDetalle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "bronce/input datasets/sources databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Tipo",
						"type": "char"
					},
					{
						"name": "nFactura",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CodArticulo",
						"type": "varchar"
					},
					{
						"name": "Linea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descripcion",
						"type": "char"
					},
					{
						"name": "Cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PUnitario",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ValorVenta",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "cAlmacen",
						"type": "varchar"
					},
					{
						"name": "Caja",
						"type": "char"
					},
					{
						"name": "Cant_nc",
						"type": "int",
						"precision": 10
					},
					{
						"name": "lineaprocedencia",
						"type": "char"
					},
					{
						"name": "idprm",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tvtaDetalle"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDM2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-616333522270563.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDM2_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksDM2_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub1_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub1_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQDEwODFDQjZGLUNGMjAtNDE3MC05OUYwLTdEMThFQjUxNUJDOF83YzkxYTM1Zi1hOTAzLTQ0MjctOTYzZi05MmJkN2M5MGY0Y2IiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleStoreConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('SingleStoreConnection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_ALMACEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputAlmacen2",
								"type": "DatasetReference"
							},
							"name": "rawAlmacen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputAlmacen",
								"type": "DatasetReference"
							},
							"name": "cleanAlmacen"
						}
					],
					"transformations": [
						{
							"name": "insertbkAlmacen"
						},
						{
							"name": "selectAlmacen"
						}
					],
					"scriptLines": [
						"source(output(",
						"          nombrepc as string,",
						"          usuariopc as string,",
						"          ippc as string,",
						"          cempresa as string,",
						"          code as string,",
						"          calmacen as string,",
						"          caja as string,",
						"          activo as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawAlmacen",
						"rawAlmacen derive(bk_almacen = trim(caja)) ~> insertbkAlmacen",
						"insertbkAlmacen select(mapColumn(",
						"          bk_almacen,",
						"          des_almacen = calmacen",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectAlmacen",
						"selectAlmacen sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanAlmacen"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputAlmacen2')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputAlmacen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_ARTICULO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputArticulo2",
								"type": "DatasetReference"
							},
							"name": "rawArticulo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputArticulo",
								"type": "DatasetReference"
							},
							"name": "cleanArticulo"
						}
					],
					"transformations": [
						{
							"name": "insertbkarticulo"
						},
						{
							"name": "selectArticulo"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Codarticulo as string,",
						"          Proveedor as string,",
						"          Modelo as string,",
						"          Linea as string,",
						"          cMaterial as string,",
						"          color as string,",
						"          Talla as string,",
						"          cTaco as string,",
						"          cmC as string,",
						"          cmV as string,",
						"          Descripcion as string,",
						"          Unidad as string,",
						"          Stock as integer,",
						"          StockMin as integer,",
						"          StockMax as integer,",
						"          CostoPromedio as integer,",
						"          Costo as integer,",
						"          CodPais as integer,",
						"          CodUbigeo as integer,",
						"          Exento as integer,",
						"          Tipo as integer,",
						"          CodTemporada as integer,",
						"          Flag as integer,",
						"          EstadoNuevo as integer,",
						"          Angurriento as integer,",
						"          flag1 as integer,",
						"          cAnno as integer,",
						"          CodInterno as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawArticulo",
						"rawArticulo derive(bk_articulo = trim(Codarticulo)) ~> insertbkarticulo",
						"insertbkarticulo select(mapColumn(",
						"          bk_articulo,",
						"          Modelo,",
						"          Linea,",
						"          color,",
						"          Descripcion,",
						"          Unidad,",
						"          CodInterno",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectArticulo",
						"selectArticulo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanArticulo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputArticulo2')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputArticulo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_CLIENTE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputCliente2",
								"type": "DatasetReference"
							},
							"name": "rawCliente"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputCliente",
								"type": "DatasetReference"
							},
							"name": "cleanCliente"
						}
					],
					"transformations": [
						{
							"name": "insertarbkCliente"
						},
						{
							"name": "selectCliente"
						}
					],
					"scriptLines": [
						"source(output(",
						"          RUC as string,",
						"          Nombre as string,",
						"          Direccion as string,",
						"          Telefono as string,",
						"          fecnac as timestamp,",
						"          asesor as integer,",
						"          ccliente as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawCliente",
						"rawCliente derive(bk_cliente = trim(ccliente)) ~> insertarbkCliente",
						"insertarbkCliente select(mapColumn(",
						"          bk_cliente,",
						"          RUC,",
						"          Nombre,",
						"          Direccion,",
						"          Telefono,",
						"          si_promotor = asesor",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCliente",
						"selectCliente sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanCliente"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputCliente2')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputCliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_EMPLEADO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputEmpleado2",
								"type": "DatasetReference"
							},
							"name": "rawEmpleado"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputEmpleado",
								"type": "DatasetReference"
							},
							"name": "cleanEmpleado"
						}
					],
					"transformations": [
						{
							"name": "insertamosbk"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codemp as string,",
						"          nombre as string,",
						"          apellidomat as string,",
						"          apellidopat as string,",
						"          cvendedor as string,",
						"          dni as string,",
						"          mostrar as string,",
						"          cempresa as string,",
						"          Lactancia as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawEmpleado",
						"rawEmpleado derive(bk_empleado = trim(codemp)) ~> insertamosbk",
						"insertamosbk sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanEmpleado"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputEmpleado2')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputEmpleado')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_LOCAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputLocal3",
								"type": "DatasetReference"
							},
							"name": "rawLocal"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputLocal",
								"type": "DatasetReference"
							},
							"name": "cleanLocal"
						}
					],
					"transformations": [
						{
							"name": "insertbkLocal"
						},
						{
							"name": "selectLocal"
						}
					],
					"scriptLines": [
						"source(output(",
						"          nLocal as string,",
						"          Descripcion as string,",
						"          BackTda as string,",
						"          codubigeo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawLocal",
						"rawLocal derive(bk_local = trim(nLocal)) ~> insertbkLocal",
						"insertbkLocal select(mapColumn(",
						"          bk_local,",
						"          des_local = Descripcion,",
						"          cod_ubigeo = codubigeo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectLocal",
						"selectLocal sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanLocal"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputLocal3')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_MONEDA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRowInputMoneda2",
								"type": "DatasetReference"
							},
							"name": "rawMoneda"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputMoneda",
								"type": "DatasetReference"
							},
							"name": "cleanMoneda"
						}
					],
					"transformations": [
						{
							"name": "insertbkMoneda"
						},
						{
							"name": "selectMoneda"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cMoneda as string,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawMoneda",
						"rawMoneda derive(bk_moneda = trim(cMoneda)) ~> insertbkMoneda",
						"insertbkMoneda select(mapColumn(",
						"          bk_moneda,",
						"          Descripcion",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectMoneda",
						"selectMoneda sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanMoneda"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRowInputMoneda2')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputMoneda')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_TARJETA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputTarjeta",
								"type": "DatasetReference"
							},
							"name": "rawTarjeta"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputTarjeta",
								"type": "DatasetReference"
							},
							"name": "cleanTarjeta"
						}
					],
					"transformations": [
						{
							"name": "insertbkTarjeta"
						},
						{
							"name": "selectTarjeta"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cTarjeta as string,",
						"          Nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawTarjeta",
						"rawTarjeta derive(bk_mediopago = trim(cTarjeta)) ~> insertbkTarjeta",
						"insertbkTarjeta select(mapColumn(",
						"          bk_mediopago,",
						"          des_mediopago = Nombre",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectTarjeta",
						"selectTarjeta sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanTarjeta"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputTarjeta')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputTarjeta')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_TIPODOCUMENTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputTipoDocumento",
								"type": "DatasetReference"
							},
							"name": "rawTipoDocumento"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputTipoDocumento",
								"type": "DatasetReference"
							},
							"name": "cleanTipoDocumento"
						}
					],
					"transformations": [
						{
							"name": "insertbkTipoDocumento"
						},
						{
							"name": "selectTipoDocumento"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Tipo as string,",
						"          Descripcion as string,",
						"          DescLarga as string,",
						"          Modulo as string,",
						"          F as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawTipoDocumento",
						"rawTipoDocumento derive(bk_tipoDocumento = trim(Tipo)) ~> insertbkTipoDocumento",
						"insertbkTipoDocumento select(mapColumn(",
						"          bk_tipoDocumento,",
						"          Descripcion,",
						"          DescLarga,",
						"          Modulo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectTipoDocumento",
						"selectTipoDocumento sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanTipoDocumento"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputTipoDocumento')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputTipoDocumento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_UBIGEO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "plata"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataRawInputUbigeo",
								"type": "DatasetReference"
							},
							"name": "rawUbigeo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCleanOutputUbigeo",
								"type": "DatasetReference"
							},
							"name": "cleanUbigeo"
						}
					],
					"transformations": [
						{
							"name": "insertbkUbigeo"
						},
						{
							"name": "selectUbigeo"
						}
					],
					"scriptLines": [
						"source(output(",
						"          IDDIST as string,",
						"          NOMBDEP as string,",
						"          NOMBPROV as string,",
						"          NOMBDIST as string,",
						"          NOMCAPITAL as string,",
						"          CODREGNAT as string,",
						"          REGIONNATURAL as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawUbigeo",
						"rawUbigeo derive(bk_ubigeo = trim(IDDIST)) ~> insertbkUbigeo",
						"insertbkUbigeo select(mapColumn(",
						"          bk_ubigeo,",
						"          NOMBDEP,",
						"          NOMBPROV,",
						"          NOMBDIST,",
						"          NOMCAPITAL,",
						"          CODREGNAT,",
						"          REGIONNATURAL",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectUbigeo",
						"selectUbigeo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cleanUbigeo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataRawInputUbigeo')]",
				"[concat(variables('factoryId'), '/datasets/DataCleanOutputUbigeo')]"
			]
		}
	]
}